Сравнение файлов ListOfSettingsView.cpp и LISTOFSETTINGSVIEW_OLD.CPP
***** ListOfSettingsView.cpp

#include <logger.h>

***** LISTOFSETTINGSVIEW_OLD.CPP



*****

***** ListOfSettingsView.cpp
                iInfoCR->Get(Current+5,Data.iViewType);
                iInfoCR->Get(Current+6,(TInt&)Data.iMinValue);
                iInfoCR->Get(Current+7,(TInt&)Data.iMaxValue);
                if (Data.iType!=EPropertyInt&&Data.iType!=EPropertyString16&&Data.iType!=EPropertyString8)
***** LISTOFSETTINGSVIEW_OLD.CPP
                iInfoCR->Get(Current+5,Data.iViewType);
                iInfoCR->Get(Current+6,Data.iMinValue);
                iInfoCR->Get(Current+7,Data.iMaxValue);
                if (Data.iType!=EPropertyInt&&Data.iType!=EPropertyString16&&Data.iType!=EPropertyString8)
*****

***** ListOfSettingsView.cpp
                        {
                        
                        Data.iExists=Exists(Data.iUid,Data.iKey,Data.iType);
                        if (Data.iExists==-1){continue;}
                        _LOG(_L("Will test to unlock now"));
                        //Unlocked+=TestUnlock(Data.iUid);
                        _LOGDATA(_L("Unlocked after: %d"),Unlocked);
                        }
***** LISTOFSETTINGSVIEW_OLD.CPP
                        {
                        Data.iExists=Exists(Data.iUid,Data.iKey,Data.iType);
                        Unlocked=TestUnlock(Data.iUid);
                        if (Data.iExists==-1){continue;}
                        }
*****

***** ListOfSettingsView.cpp
                }
        if (Unlocked>0)
                {
***** LISTOFSETTINGSVIEW_OLD.CPP
                }
        if (Unlocked!=0)
                {
*****

***** ListOfSettingsView.cpp
        {
        TRAPD(err,{
                CRepository* testCR=CRepository::NewL(TUid::Uid(aUid));
                RArray<TUint32> arr;
                testCR->FindL(0,0,arr);
                delete testCR;
                return arr.Find((TUint32)aKey);
        };);
        if (err!=KErrNone)
                {return err;}
        }
***** LISTOFSETTINGSVIEW_OLD.CPP
        {
        TInt NeedUnlock=0;
                CRepository* testCR=CRepository::NewL(TUid::Uid(aUid));
                if (aType==EInt)
                        {
                        TInt err=0;
                        TInt def_val;
                        err=testCR->Get(aKey,def_val);
                        if (def_val<2)
                                {
                                if (def_val==1){err=testCR->Set(aKey,0);}
                                else if (def_val==0) {err=testCR->Set(aKey,1);}
                                }
                        else {err=testCR->Set(aKey,def_val+1);}
                        TInt ResultVal;
                        err=testCR->Get(aKey,ResultVal);
                        if (ResultVal!=def_val){err=testCR->Set(aKey,def_val);NeedUnlock=0;}
                        else {NeedUnlock=1;}
                        if (err==KErrNotFound){return -1;}
                        }
                else if (aType==EString)
                        {
                        TInt err=0;
                        TBuf<255> def_val;
                        err=testCR->Get(aKey,def_val);
                        TBuf<255> NewVal;
                        NewVal.Copy(_L(""));
                        err=testCR->Set(aKey,NewVal);
                        TBuf<255> ResultVal;
                        err=testCR->Get(aKey,ResultVal);
                        
                        if (ResultVal!=def_val){testCR->Set(aKey,def_val);NeedUnlock=0;}
                        else {NeedUnlock=1;}
                        if (err==KErrNotFound){return -1;}
                        }
                else if (aType==EReal)
                        {
                        TReal def_val;
                        TInt err;
                        err=testCR->Get((TUint32)aKey,def_val);
                        if (def_val<2){err=testCR->Set(aKey,0);}
                        else {err=testCR->Set(aKey,def_val+1);}
                        TReal ResultVal;
                        err=testCR->Get(aKey,ResultVal);
                        if (ResultVal!=def_val){testCR->Set(aKey,def_val);NeedUnlock=0;}
                        else {NeedUnlock=1;}
                        if (err==KErrNotFound){return -1;}
                        }
                delete testCR;
        }
*****

***** ListOfSettingsView.cpp
        {
        _LOGDATA(_L("Testing unlock, UID: %d"),aUid);
        RArray<TInt> ArrToBeReplaced;
***** LISTOFSETTINGSVIEW_OLD.CPP
        {
        RArray<TInt> ArrToBeReplaced;
*****

***** ListOfSettingsView.cpp
                }
        if (FileData->Des().Find(TextToBeReplaced)!=KErrNotFound){_LOG(_L("Data found, unlock needed")); Unlocked+=UnLock(path,
ileData,TextToBeReplaced,TextToReplace);}
        return Unlocked;
***** LISTOFSETTINGSVIEW_OLD.CPP
                }
        if (FileData->Des().Find(TextToBeReplaced)!=KErrNotFound){Unlocked=UnLock(path,FileData,TextToBeReplaced,TextToReplace)
}
        return Unlocked;
*****

***** ListOfSettingsView.cpp
        TInt unlocked_count=0;
        _LOG(_L("Unlocking..."))
        while (aText->Find(aTextToBeReplaced)!=KErrNotFound)
***** LISTOFSETTINGSVIEW_OLD.CPP
        TInt unlocked_count=0;
        
        while (aText->Find(aTextToBeReplaced)!=KErrNotFound)
*****

***** ListOfSettingsView.cpp
                }
        _LOGDATA(_L("%d entries unlocked at this file"),unlocked_count);
        i=0;
***** LISTOFSETTINGSVIEW_OLD.CPP
                }
        
        i=0;
*****

***** ListOfSettingsView.cpp
                        ((CTweakSAppUi*)AppUi())->GlobalMsgQuery(text,header);
                        AppUi()->ActivateLocalViewL(TUid::Uid(EPluginsListViewId));
                        return;
                }
***** LISTOFSETTINGSVIEW_OLD.CPP
                        ((CTweakSAppUi*)AppUi())->GlobalMsgQuery(text,header);
                }
*****

***** ListOfSettingsView.cpp
        //change
        if (iListOfSettings->ListBox()->Model()->NumberOfItems()==0){return ETrue;}
        HandleLBEvent(); 
***** LISTOFSETTINGSVIEW_OLD.CPP
        //change
        HandleLBEvent(); 
*****

***** ListOfSettingsView.cpp
        // about setting
        if (iListOfSettings->ListBox()->Model()->NumberOfItems()==0){return ETrue;}
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
***** LISTOFSETTINGSVIEW_OLD.CPP
        // about setting
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
*****

***** ListOfSettingsView.cpp
        TSettingData Data=iSettingsData->At(i);
        iListOfSettings->Update();
        if (Data.iNumOfCombo!=0&&Data.iViewType!=EViewBitMask)
***** LISTOFSETTINGSVIEW_OLD.CPP
        TSettingData Data=iSettingsData->At(i);
        
        if (Data.iNumOfCombo!=0&&Data.iViewType!=EViewBitMask)
*****

***** ListOfSettingsView.cpp
                                result.Append(buf);
                                TChar c(aData.iMinValue);
                                result.Append(c);
                                
***** LISTOFSETTINGSVIEW_OLD.CPP
                                result.Append(buf);
                                result.Append(_L(", "));
                                
*****

***** ListOfSettingsView.cpp
        {
        TInt res=val;
        CSliderDialog::RunDlgLD(aData.iName,res,aData.iMinValue,aData.iMaxValue);
        return res;
***** LISTOFSETTINGSVIEW_OLD.CPP
        {
        
        CSliderDialog* dlg = CSliderDialog::NewL();
        TInt res=dlg->RunLD(val,aData.iMaxValue,aData.iMinValue,aData.iName);
        delete dlg;
        return res;
*****

***** ListOfSettingsView.cpp
        {
        TInt fixForHide=0;
                _LIT(KBinFormat,"%b");
                TBuf<255> txt1; TBuf<255> txt;
***** LISTOFSETTINGSVIEW_OLD.CPP
        {
                _LIT(KBinFormat,"%bb");
                TBuf<255> txt1; TBuf<255> txt;
*****

***** ListOfSettingsView.cpp
                TInt j=0;
                
                for(i=txt1.Length()-1; i>=0 ; i--)
                {//reverse
                txt.Append(txt1[i]);
***** LISTOFSETTINGSVIEW_OLD.CPP
                TInt j=0;
                for(i=txt1.Length()-1; i>=0 ; i--)
                {
                txt.Append(txt1[i]);
*****

***** ListOfSettingsView.cpp
                }
                
                const TInt l=txt1.Length();
***** LISTOFSETTINGSVIEW_OLD.CPP
                }
                const TInt l=txt1.Length();
*****

***** ListOfSettingsView.cpp
                        }
                _LOG(_L("Reading data binary dialog, txt:"));
                _LOG(txt);
                CEikonEnv::Static()->InfoMsg(txt);
                CDesCArray* itemList = new (ELeave) CDesCArrayFlat(3);
***** LISTOFSETTINGSVIEW_OLD.CPP
                        }
                txt.Delete(0,1);
                CDesCArray* itemList = new (ELeave) CDesCArrayFlat(3);
*****

***** ListOfSettingsView.cpp
                        ItemTxt.Append(_L("\t"));
                        if (element.iIntValue!=1)
                                {
                                itemList->AppendL(ItemTxt);
                                if (txt[i]=='1') {DefaultSelectedItemsList->AppendL(i+fixForHide);}
                                }
                        else 
                                {fixForHide--;}
                        }
                TInt pos;
                TInt sel=0;
***** LISTOFSETTINGSVIEW_OLD.CPP
                        ItemTxt.Append(_L("\t"));
                        itemList->AppendL(ItemTxt);
                        if (txt[i]=='1'){DefaultSelectedItemsList->AppendL(i);}
                        }
                
                TInt sel=0;
*****

***** ListOfSettingsView.cpp
                        {
                        /* old write
                        i=0;
***** LISTOFSETTINGSVIEW_OLD.CPP
                        {
                        
                        i=0;
*****

***** ListOfSettingsView.cpp
                                }
                        */
                        
                        //txt.Fill(c,txt.Length());    
                        TBuf<512> temp;
                        TInt log;
                        for (log=0;log<DefaultSelectedItemsList->Count();log++)
                                {temp.AppendNum(DefaultSelectedItemsList->At(log)); temp.Append(_L(", "));}
                        _LOG(_L("writing data binary dialog, default selected items list:"));
                        _LOG(temp);
                        _LOG(_L("writing data binary dialog, txt:"));
                        _LOG(txt);
                        TKeyArrayFix key(0,ECmpNormal);
                        TInt pos;
                        fixForHide = 0;
                        for (i=0; i<txt.Length(); i++)
                                {
                                TKeyArrayFix key(i,ECmpNormal);
                                TComboElement element=aData.iComboElements->At(i);
                                if (element.iIntValue==1) {fixForHide--;}
                                else
                                        {
                                        TBool found;
                                        for (TInt j=0; j<DefaultSelectedItemsList->Count();j++)
                                                {if (DefaultSelectedItemsList->At(j)==i+fixForHide){found=ETrue; break;} else {
ound=EFalse;}}
                                        if (found) 
                                                {
                                                txt.Replace (i ,1,_L("1"));
                                                }
                                        else 
                                                {
                                                txt.Replace (i ,1,_L("0"));
                                                }
                                        }
#ifdef _DEBUG
                                TBuf<255> b;
                                b.AppendNum(i);
                                b.Append(_L(" "));
                                b.Append(txt);
                                _LOG(b);
#endif
                                }
                        }
        
                TBuf<255> txt2;
***** LISTOFSETTINGSVIEW_OLD.CPP
                                }
                        }
                TBuf<255> txt2;
*****

***** ListOfSettingsView.cpp
        Dialog->SetPromptL(aData.iName);
        if (aData.iViewType!=EViewBitMask)
                {Dialog->SetMinimumAndMaximum(aData.iMinValue,aData.iMaxValue);}
        else {Dialog->SetMinimumAndMaximum(0,KMaxTInt);}
        
        return Dialog->RunLD(); 
***** LISTOFSETTINGSVIEW_OLD.CPP
        Dialog->SetPromptL(aData.iName);
        Dialog->SetMinimumAndMaximum(aData.iMinValue,aData.iMaxValue);
        return Dialog->RunLD(); 
*****

***** ListOfSettingsView.cpp
        //reset to default
        if (iListOfSettings->ListBox()->Model()->NumberOfItems()==0){return ETrue;}
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
***** LISTOFSETTINGSVIEW_OLD.CPP
        //reset to default
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
*****

***** ListOfSettingsView.cpp
#endif
        if (iListOfSettings->ListBox()->Model()->NumberOfItems()==0){return ETrue;}
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
***** LISTOFSETTINGSVIEW_OLD.CPP
#endif
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
*****

***** ListOfSettingsView.cpp
        //handy input
        if (iListOfSettings->ListBox()->Model()->NumberOfItems()==0){return ETrue;}
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
***** LISTOFSETTINGSVIEW_OLD.CPP
        //handy input
        TInt i=iListOfSettings->ListBox()->CurrentItemIndex();
*****

***** ListOfSettingsView.cpp
        }
void CListOfSettingsView::GetS60PlatformVersionL( RFs& aFs, TInt& aMajor, TInt& aMinor )
    {
        _LIT(KS60ProductIDFile, "Series60v*.sis");
        _LIT(KROMInstallDir, "z:\\system\\install\\");
    TFindFile ff( aFs );
    CDir* result;
    User::LeaveIfError( ff.FindWildByDir( KS60ProductIDFile, KROMInstallDir, result ) );
    CleanupStack::PushL( result );
    User::LeaveIfError( result->Sort( ESortByName|EDescending ) );
    aMajor = (*result)[0].iName[9] - '0';
    aMinor = (*result)[0].iName[11] - '0';
    CleanupStack::PopAndDestroy(); // result
    }
                                
***** LISTOFSETTINGSVIEW_OLD.CPP
        }
                                
*****

